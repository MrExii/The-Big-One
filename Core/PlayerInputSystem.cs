//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Core/PlayerInputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputSystem : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputSystem"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""dcb6449e-0bdd-4b14-b664-334e4b7d5c67"",
            ""actions"": [
                {
                    ""name"": ""UsePotion"",
                    ""type"": ""Button"",
                    ""id"": ""3702ce8b-1ff9-4cc6-8f12-aa5353911660"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseTrinket"",
                    ""type"": ""Button"",
                    ""id"": ""f52f5717-2bb2-4e7f-9e32-6ba1834882db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""203fb6e9-f326-4138-985f-616d8c1317dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReloadSector"",
                    ""type"": ""Button"",
                    ""id"": ""949f39d8-4c1c-4cf9-b20c-e33fe9c6cd78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExitRoom"",
                    ""type"": ""Button"",
                    ""id"": ""74b3ce36-ca2d-478f-93bd-60852393fe81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""38899fc7-2ea7-40f3-8f03-bf293353235d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Z"",
                    ""type"": ""Button"",
                    ""id"": ""15d1aa6c-810e-4d20-bc6d-90c6f303a09c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""69e48f31-040b-4ba2-934b-35ca9a0d54df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""21040f7d-fdf8-4d14-9790-1c45392af1dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""e9dd2718-c352-4e5c-8ce0-38c6e6a99105"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""S"",
                    ""type"": ""Button"",
                    ""id"": ""3e02431f-d3ee-4633-ab19-07e436d8211b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""dcf6c4e8-8957-4bff-8a57-eb8e4c1fdb41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""a99bfa9a-6ec9-4f09-907d-a86de16c81d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""W"",
                    ""type"": ""Button"",
                    ""id"": ""9602dd7e-2424-46ed-93ab-e4ddbf934f6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""0b915a1c-e6be-49c7-bd9d-82865a346696"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""C"",
                    ""type"": ""Button"",
                    ""id"": ""942664a2-f061-46ba-8ce5-5bafa3034cfd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""V"",
                    ""type"": ""Button"",
                    ""id"": ""45573998-6c12-4696-83c3-b891a7675bcc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonNorth"",
                    ""type"": ""Button"",
                    ""id"": ""2dbad7f4-5056-4e2b-a80b-74a7649892f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonSouth"",
                    ""type"": ""Button"",
                    ""id"": ""0cf4cc67-31fb-42eb-9653-c8f65e6a5c2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonWest"",
                    ""type"": ""Button"",
                    ""id"": ""4a7e3e13-e72e-48c0-ab7b-6bbc28b839c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonEast"",
                    ""type"": ""Button"",
                    ""id"": ""d6c49fe4-9276-4e30-b7b5-7bbb927ee1d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftShoulder"",
                    ""type"": ""Button"",
                    ""id"": ""19f70886-1501-4928-aec5-9bf5d4b1cfe0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightShoulder"",
                    ""type"": ""Button"",
                    ""id"": ""9c0fdad1-a089-49ba-a293-5a3e58bf8642"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftStickButton"",
                    ""type"": ""Button"",
                    ""id"": ""901e18b0-e23e-4482-873d-5d238849f246"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStickButton"",
                    ""type"": ""Button"",
                    ""id"": ""a502c6e8-9130-4600-ba68-55bc5262f4e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ecf69f07-8b0b-4e73-a3be-cfb3baef2739"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UsePotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35703aab-3f88-4f37-bbe1-cf6937b97b21"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UsePotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c8d2a46-bbf8-4e2a-b633-cdcb25577c98"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseTrinket"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8775488-7973-4b2b-ae21-d0b23d169fd8"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UseTrinket"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2a119c9-61f1-473d-ace2-f82a0c7064ff"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UseTrinket"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cdecca4-db88-41dc-9076-c1edcc6517da"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ReloadSector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c8d726b-7b3c-44e6-be08-782a94a96153"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ReloadSector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4259e047-946b-42a8-8eb4-786df78a2436"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ExitRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""607621bc-2c3a-4794-8577-54e11a58ee89"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ExitRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95fab26b-78c0-4919-92e9-193f96bedb47"",
                    ""path"": ""<Keyboard>/#(R)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be0ccd0e-a600-4bc6-9bd2-3d6223509252"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da992725-c8f5-46c7-acdd-4d82d30975cc"",
                    ""path"": ""<Keyboard>/#(Z)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Z"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06e35943-3774-4e50-827f-97d97be2ce95"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20766268-ce27-44b4-a4de-98f4c9f194b0"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2e2fc2e-0c81-401c-863c-de784f4cf300"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""S"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76c2b652-eb13-4703-ab5e-afc65ecd19d2"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d05dff86-3b1e-44f4-85fa-d7a0c6c2a805"",
                    ""path"": ""<Keyboard>/#(F)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc0b25b0-c650-4077-8520-9dce4a700f36"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""W"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""597701a4-c7d5-4031-9895-5eef64c0be06"",
                    ""path"": ""<Keyboard>/#(X)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9bf7271-1b17-44df-8360-520e22646b2f"",
                    ""path"": ""<Keyboard>/#(C)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e4ce423-5090-4388-9261-7fc00a67ef7f"",
                    ""path"": ""<Keyboard>/#(V)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""V"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04258758-7ebd-440d-9337-fffa99be53a1"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ButtonNorth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8613a14-0a5c-4443-ba13-386e7381c01f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ButtonWest"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25d70b47-1901-44e0-87c2-ab9781f34de6"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftShoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4240f127-4950-483b-9641-fb7e7c833132"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightShoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""985e5d5d-1a37-4f4a-85ca-ccc0b193964c"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftStickButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37cfda13-abe4-4955-a5a9-0e30ec215215"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightStickButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6a9f96a-61c1-4e51-a0f7-d5d218bd67b3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ButtonSouth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67540690-6652-4d31-9f74-fc1f6547886b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ButtonEast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e45b0a5c-dd50-4b58-84b8-9f5ad00f0b17"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UseWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7d089da-82be-4bca-8f2d-b2928ab7cb63"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UseWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player.Movement"",
            ""id"": ""e22e748b-a804-44d5-8737-fa8129e4cb7a"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""be457413-b2ab-45ae-9f21-831585079cce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""39b28001-99ab-486e-99c7-4f167e849a26"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1e04c05f-639a-4c9e-8d41-7fa69429998a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72c15559-763f-4b0a-a492-908aeebf930b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04ccce32-3c6d-4206-afec-4aca3f6ce91b"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c1f8b8f-a686-48e5-af99-6e63d4cad4b0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfb49ac1-cda0-4398-bbe0-c9347763e658"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""556fcd7b-dc93-41bc-8e2c-ab258d11e525"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player.HeartStalker"",
            ""id"": ""58dedbf7-430a-4d7d-9a60-10a7f47702eb"",
            ""actions"": [
                {
                    ""name"": ""LaunchActivity"",
                    ""type"": ""Button"",
                    ""id"": ""ffc1ca31-c2b8-4f22-8e31-c34e0ea13104"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""45424b5a-d461-4853-a475-e2c61f245313"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LaunchActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be792bff-55e6-4f59-bcf4-ed145b17e6c6"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""LaunchActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.StatsBoard"",
            ""id"": ""6c1c6d3e-7bea-4a90-9a58-f59dcb54bdb4"",
            ""actions"": [
                {
                    ""name"": ""OpenBoard"",
                    ""type"": ""Button"",
                    ""id"": ""be6a3146-0b03-42a4-ba0e-dace562b1b76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseBoard"",
                    ""type"": ""Button"",
                    ""id"": ""8c19b5cc-e462-4def-adb1-619df1a361b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpArrow"",
                    ""type"": ""Button"",
                    ""id"": ""6997398f-6c9e-4b4b-94b6-690c1c6e48ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownArrow"",
                    ""type"": ""Button"",
                    ""id"": ""9b050b84-f741-4a26-8b3e-a0f82cd3d16c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightArrow"",
                    ""type"": ""Button"",
                    ""id"": ""d7424be4-1add-49cd-9288-95d9afae3426"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""54b55ce1-7ca1-4403-a3dd-158edb2e02ab"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a5751a3-ece3-4126-8832-2d37f82a9387"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4f93390-9e5e-4c8d-b815-232bd6e53bce"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CloseBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a7f99de-95f3-45cf-854f-382d8209cb28"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CloseBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d58a1023-b0d2-435b-a8c1-b249a3ae8cf1"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UpArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c294adc-68a4-42dc-ac09-864ec47f3eb8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UpArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b3971f9-9aff-4363-b9a9-823b41a3b612"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DownArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b110bf9-4abf-49ff-9a65-f81a9e92a88c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DownArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d086f14-8adb-4b56-9701-7750940bc8a0"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e46717a-a7e0-464c-9cca-62fc1a4423d5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.SimuBoard"",
            ""id"": ""c2355ed6-c0a5-41c1-8706-7aef8bc7aa87"",
            ""actions"": [
                {
                    ""name"": ""OpenBoard"",
                    ""type"": ""Button"",
                    ""id"": ""2cf88a2f-352c-4028-9779-fb38f3f687b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseBoard"",
                    ""type"": ""Button"",
                    ""id"": ""33180178-164c-4241-adcb-6d5e7f00468c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LaunchGame"",
                    ""type"": ""Button"",
                    ""id"": ""68bd8e23-3a31-46e8-ad66-06fa80bfc75a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpArrow"",
                    ""type"": ""Button"",
                    ""id"": ""31ab34fb-6b96-41fb-a0b6-e326db68fbb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownArrow"",
                    ""type"": ""Button"",
                    ""id"": ""33c9599e-66d8-4e36-8bdc-6b79f64685d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightArrow"",
                    ""type"": ""Button"",
                    ""id"": ""c7cb67ca-a119-4b66-8416-ea069fddef94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftArrow"",
                    ""type"": ""Button"",
                    ""id"": ""e06f7011-7260-4880-b56e-d5edd518dabc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NoobMode"",
                    ""type"": ""Button"",
                    ""id"": ""55907883-b63c-48f8-ac12-56465c82a7a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b2c907c8-0700-492a-b44a-f100e45a3c4a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c957a65-0d61-439d-a65d-3d157f8650a1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2cbd2a0-9a03-4d96-adfd-a1d9c719f34e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CloseBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""349e4fbb-fca7-4c37-8bc8-7b55108c5818"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CloseBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0a56b52-98c5-4911-8d93-e09ef5e259ba"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LaunchGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56aab3bd-fb36-4010-bfc5-2cdb9d948d67"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""LaunchGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""966c14fd-bbe4-4606-8af6-6b7aa00d6962"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UpArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6c43a4c-c997-4bfd-9719-f58528f3099d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UpArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee7da33a-850a-4cfc-b2c1-4d60c708cd81"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DownArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38726aa8-863b-4da9-ace6-1b6772dc6fc3"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DownArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59218b8f-2f8b-4d5d-b93d-af9765bc56aa"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10c243b8-9024-41d2-b7ea-efff077c78ca"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1eb3e3a8-5ecf-44e8-9d4f-b02c3c2fe9ac"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93ad01d4-a2a6-4770-a67d-b8f620aaff89"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b48c36b-508f-4dbc-bdb5-567f8019e0df"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NoobMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0f74139-c234-40d9-a15f-b1a3158a4d94"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NoobMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.MainMenu"",
            ""id"": ""9c80908e-02d5-4774-8893-83b01f11507f"",
            ""actions"": [
                {
                    ""name"": ""NewGame"",
                    ""type"": ""Button"",
                    ""id"": ""243b83e2-cd7b-40a8-8e1d-507034fd6739"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitOptions"",
                    ""type"": ""Button"",
                    ""id"": ""faa177d2-7db9-46a0-a9f7-c5354249c815"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenOptions"",
                    ""type"": ""Button"",
                    ""id"": ""d558dbad-e08a-450c-8b51-70a73db73740"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""d6e7240e-cc1c-44aa-b784-3824d5bff7c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PassFaders"",
                    ""type"": ""Button"",
                    ""id"": ""0e355606-9ddf-4e86-8dcd-01b0434cea4f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightArrow"",
                    ""type"": ""Button"",
                    ""id"": ""4ec65b94-d20e-4e45-a4a7-d5591e34e66f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftArrow"",
                    ""type"": ""Button"",
                    ""id"": ""5275fc2d-f63d-4d06-bca0-f6ae40d49044"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenControlls"",
                    ""type"": ""Button"",
                    ""id"": ""88a69ce7-190e-4e89-abf7-c1aa3607ee9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeleteSave"",
                    ""type"": ""Button"",
                    ""id"": ""07ad9b2a-6ae1-4d55-82dc-97b74a40b8eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Continue"",
                    ""type"": ""Button"",
                    ""id"": ""bb757a6b-c124-44ac-99cf-729014b1e6f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectDown"",
                    ""type"": ""Button"",
                    ""id"": ""8d070531-213a-432d-b694-8e9b917ab739"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectUp"",
                    ""type"": ""Button"",
                    ""id"": ""d9df8272-0a89-4aad-b47e-94eebd226b9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""06041125-4298-462f-a936-d3ed466ec913"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NewGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3a78042-b8fe-41a3-bb1d-6e03dcd096ea"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NewGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6f291d9-a425-457f-b72b-3ea1cff164e8"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""QuitOptions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0af09768-43f4-48a4-9221-5f2d1077943f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""QuitOptions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6c79e72-370f-46e4-a08f-c787b7729acb"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenOptions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""308e6da6-b408-4416-a00b-e9f45dcc6ec0"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenOptions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e6cc60f-d45b-4809-821a-e3288216aacb"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac0f2d1f-19df-445c-a1af-b1a847408ea3"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c3987be-150d-47b8-84d8-e6595391f17b"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PassFaders"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e64d62b8-d33e-4325-9314-08ca3ee75e91"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PassFaders"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""393da805-10fa-4386-a669-193d2b03a2f1"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54058c74-2dae-4e20-9edb-cc0ef4fe8704"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e9e8b48-af21-476c-a1c1-b2cea6b8405e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d816225d-1a28-4c5e-ba9f-b3038e4de6a4"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f09caba-7d57-4354-95d7-6b4fc4322813"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenControlls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""380cc2f5-04fd-4f98-a58f-c31f2ab5ded3"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenControlls"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d436ae2a-9e85-401d-af9b-e6699d9c2dc8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DeleteSave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""198719d7-f46b-4cc3-b518-e47a6ffc8bea"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DeleteSave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""046c8155-848b-4405-b6ee-0d99124d50c0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e93fdee7-0520-43ce-a78c-c26aebc13214"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6fcfdb2-a7ff-4297-b294-eadfde9e9ab0"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""879d9acf-1586-4879-9222-8070c9e38488"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d51c22f-18a3-4631-8a37-453bb212457b"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0cf942a-305f-4ae7-af3b-8d64ae258584"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.ControllsMenu"",
            ""id"": ""b19f0ac3-b87b-4d4e-9a9a-f293256b8d67"",
            ""actions"": [
                {
                    ""name"": ""QuitControllsMenu"",
                    ""type"": ""Button"",
                    ""id"": ""5cbf511c-e65e-4f86-bb66-522bdaf1891f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeUI"",
                    ""type"": ""Button"",
                    ""id"": ""c68e5f7a-dee8-4885-a85c-0a01d595559a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skip Dialogue"",
                    ""type"": ""Button"",
                    ""id"": ""a0338503-f0cd-410b-8fbd-c3c97e122c4b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""32395e50-17c2-43db-8585-9d2f1a096443"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""QuitControllsMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""650e35ca-3d9d-49d5-9eeb-4c1123103e44"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""QuitControllsMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f2f4454-86e6-4df9-8daf-22c578fd83d5"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ChangeUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3a259a5-91bf-4595-8e0c-42f3bfe88eb7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Skip Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3632f23-451a-4fbb-b027-58981ea83c07"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Skip Dialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.Intro"",
            ""id"": ""837d4717-e9be-496a-a1a4-a9af80255732"",
            ""actions"": [
                {
                    ""name"": ""KeyPressed"",
                    ""type"": ""Button"",
                    ""id"": ""c7ed9052-2ab7-4469-8490-a421b910d626"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7df47734-cffc-4d01-a3ad-948b6e8e7db7"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""KeyPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""327a082a-d165-4bd9-af2f-1fcbb7150a0c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.PauseMenu"",
            ""id"": ""6792de95-078f-41be-b037-19288356214c"",
            ""actions"": [
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""5d1c48c2-312d-4dad-b009-d26119f766cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CloseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b783499e-347a-4e84-9a02-92980bc1a95c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftArrow"",
                    ""type"": ""Button"",
                    ""id"": ""b0fc22e7-a130-4b38-9988-6ea42c63a058"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightArrow"",
                    ""type"": ""Button"",
                    ""id"": ""e5ac43a8-b771-408e-b4bc-229e78ab5b0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quit"",
                    ""type"": ""Button"",
                    ""id"": ""5f0e7e86-b1fc-43b0-8d6a-39d3665f1d2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllsMenu"",
                    ""type"": ""Button"",
                    ""id"": ""f4dcf241-8145-477e-a6aa-8d29083f8912"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReturnHome"",
                    ""type"": ""Button"",
                    ""id"": ""7e618696-f742-4ccf-a7a6-3c6e22efa5e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpArrow"",
                    ""type"": ""Button"",
                    ""id"": ""12a2ef97-dac6-439d-8178-8b5e457a524a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownArrow"",
                    ""type"": ""Button"",
                    ""id"": ""fe4b5a34-97d2-4296-9213-5654fbbb73c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""35d435f5-02b3-440c-98d2-e0ef1b460e10"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a34a694b-b569-476f-a33a-b159b12e1243"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18dcc76f-8660-4831-80d4-eff07d34e947"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd628546-778c-4d50-b040-e8eebc17f331"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CloseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b0bdbba-ba50-45d7-80e6-35e7f98bf845"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32fa7864-f209-4922-bc66-406252234a53"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88663fb3-2fc6-4101-8bee-0c7cfc76b150"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8dc2a932-e8aa-4fba-ac91-f8cf9dc6006b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33500d79-4a20-44a9-8364-df722244deb6"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cacf7554-31f4-4e7c-b41b-eeb34f72e910"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f0178a9-6000-4075-bdf5-15b4ab66829a"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ControllsMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff694894-514b-4bce-b59f-8a5f92b86701"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ControllsMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""923d8c68-b78e-4f78-bd5f-67e400839833"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ReturnHome"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01880343-0ec5-48db-810a-f3a83c4d7957"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ReturnHome"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b604b792-334a-44b4-8027-f96f2fa0b076"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UpArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f95ac20a-7b4c-48aa-ab8a-1be1d0cfadd0"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UpArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05e0c5fd-53fb-44cc-9a57-62864ad8beda"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DownArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bff8f64-1433-49ff-a058-ca1c14f2b00b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DownArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.EndGame"",
            ""id"": ""14811479-9ca4-4086-8406-42a32dfbab06"",
            ""actions"": [
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""c7562760-46a0-4ac2-add7-ed499caa8ba2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0093a552-cfee-4992-a66d-17054a6944d3"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da2e239d-6e0c-466e-bc49-c80f6137b39a"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14c55701-56a4-425f-8fd2-abc21a23dd97"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.PassiveObjects"",
            ""id"": ""ccd87f05-151d-4fdb-a9cd-54c305bd82c1"",
            ""actions"": [
                {
                    ""name"": ""Replace1"",
                    ""type"": ""Button"",
                    ""id"": ""37a63481-e89b-44ba-8c4d-3f684bc6000b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Replace2"",
                    ""type"": ""Button"",
                    ""id"": ""0fe87e20-17fe-4a3c-981e-ee423b3be14b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Replace3"",
                    ""type"": ""Button"",
                    ""id"": ""adc07fe3-6474-4696-bbc6-6bea092a6b90"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Replace4"",
                    ""type"": ""Button"",
                    ""id"": ""cf5ccb0b-b405-4802-9915-a9704c11c1a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Replace5"",
                    ""type"": ""Button"",
                    ""id"": ""b984a3c6-f61e-4328-a0d6-66a91c2a2bbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""80fa7a88-d93f-4897-b656-4d356a4a05b3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Replace1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f87a22b0-1925-4bea-911d-cb06a71cc216"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Replace1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f3f2bfc-f8ed-48d0-a44e-5e23f745dd91"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Replace2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8ce8f16-bc9c-438d-aaab-c4fc2a8f2c08"",
                    ""path"": ""<Keyboard>/#(Z)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Replace2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f54da0d3-e8ca-4c3e-96e9-fabae6c5759f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Replace3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d457a2f-731f-409b-9f14-192a7ebbf20c"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Replace3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79c0f9fb-f6ef-4a27-ad16-306c5f34b937"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Replace4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be9f85d3-15c6-463b-98fa-eb591ff175a3"",
                    ""path"": ""<Keyboard>/#(R)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Replace4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b025f8af-ed92-4d7e-b54f-42eede29169b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Replace5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f23153b9-ff7c-4a3d-adf3-00423c6520ac"",
                    ""path"": ""<Keyboard>/#(T)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Replace5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI.Credits"",
            ""id"": ""cdff7f81-7033-4985-8725-8a8159bd5b52"",
            ""actions"": [
                {
                    ""name"": ""Skip"",
                    ""type"": ""Button"",
                    ""id"": ""35d8d425-e6fc-4798-af72-e314cec1818c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5729b51a-45b9-45f0-a84b-473d4eb678c1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77904c24-85b7-419a-b5dd-1e65b9b2bd77"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dialogues"",
            ""id"": ""c538d004-0aa2-4aa2-a4ce-993552998d4e"",
            ""actions"": [
                {
                    ""name"": ""NavDown"",
                    ""type"": ""Button"",
                    ""id"": ""27ea2313-8f79-48e9-ac13-57c72afd94e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavUp"",
                    ""type"": ""Button"",
                    ""id"": ""aaaef836-09dc-44ed-ba21-53afb5805ee7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AcceptProposition"",
                    ""type"": ""Button"",
                    ""id"": ""8d394625-405c-4168-b2b5-9ce7ad57a04d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""2a9028d0-6132-46b8-b1ca-bb5248590d24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenDialogues"",
                    ""type"": ""Button"",
                    ""id"": ""c8955581-c2b4-499c-8b7f-b21f01babeeb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0ccd4949-c587-49da-9ee3-cf172d944eda"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NavDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ed3fd25-1e36-4349-ae1f-6c5bc30ff01f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NavDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cdbb429-c3e8-447a-9a7c-f6856ef85009"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AcceptProposition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48aa30b6-41ad-484d-b916-cda6c696a6b2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AcceptProposition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fc8ce53-9545-46ba-b987-63c1138dff73"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CancelDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2daa002e-3fab-4b93-addc-c92dc2133ed1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CancelDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66327917-d033-405d-b270-43d91a51f1a8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NavUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a2413e8-a449-4f07-bffd-99a7f06ecc7b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NavUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f84e32bf-1df8-4d9c-a93b-a57ad1e56a61"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenDialogues"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3ca3382-8472-4a0e-86ff-c44f26eae948"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenDialogues"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PressKey"",
            ""id"": ""1bf86a68-3c91-49ce-b7b0-fad66b13e6f0"",
            ""actions"": [
                {
                    ""name"": ""SleepRoom"",
                    ""type"": ""Button"",
                    ""id"": ""60f5c513-da9d-45c8-ad74-108bcd3befaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakeWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""fdc9c0ec-3dcc-4594-ac3e-8b49a3a0d323"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LaunchDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""7e66dfb4-70f9-4299-b923-f3caeed92eaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartActivity"",
                    ""type"": ""Button"",
                    ""id"": ""a12f9e73-0c99-4739-a610-975cafb237b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GamblingMachine"",
                    ""type"": ""Button"",
                    ""id"": ""7ce20c38-67a9-435e-9ffc-b17960f949b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Teleport"",
                    ""type"": ""Button"",
                    ""id"": ""bc293ba8-b13c-4691-b472-be56cf073a31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throne"",
                    ""type"": ""Button"",
                    ""id"": ""7b1c1c95-77f9-4af4-9f9a-24f230eea93e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpgradeWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""29b5356f-8379-407c-8296-d386d038a5aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4ec6e011-837a-4a67-bb3b-abf8ba4251a5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SleepRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1d2c1b0-077f-4344-8359-b2aaa527e384"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SleepRoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3365d812-2dcd-4606-a081-64dc3527dc70"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TakeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5648bf63-9490-45e7-b0ef-70a20f1967c9"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TakeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37c51d05-5ff4-49af-b00f-e1f6a6085182"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LaunchDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bbd2345-8ad4-4d12-9447-7618acff893d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StartActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6f14826-9d5a-49c1-91cf-bc3bea2fb786"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StartActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1de794e0-af93-41e1-a88f-81c8e289b255"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StartActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c98605ca-980f-4eba-b473-d3c43ed6eb8b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StartActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ca03eed-7d8c-41d0-822c-7e66b08b22d4"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StartActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""603b709a-a39b-4d99-aaa9-ac05d47fef58"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartActivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47cdd955-b7a0-4afd-8bfd-501227a7c7f3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GamblingMachine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""456020d9-013d-46f7-a0fa-dd12671314d4"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""GamblingMachine"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""555f3057-6107-443f-8217-5ca6b824e9f1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Teleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a8d6a75-4fdc-4a7f-a1ea-db1085ce52fc"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Teleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e160f3be-8369-46ea-b604-9bac355f44e9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Throne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c69baa4-c926-4c4c-9fb4-3fdd18c941c5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Throne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b89d15f3-e527-40e7-953e-a5e30d4c58b8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UpgradeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca06086b-4ffd-46d9-941f-bc758c2c945f"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""UpgradeWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_UsePotion = m_Player.FindAction("UsePotion", throwIfNotFound: true);
        m_Player_UseTrinket = m_Player.FindAction("UseTrinket", throwIfNotFound: true);
        m_Player_UseWeapon = m_Player.FindAction("UseWeapon", throwIfNotFound: true);
        m_Player_ReloadSector = m_Player.FindAction("ReloadSector", throwIfNotFound: true);
        m_Player_ExitRoom = m_Player.FindAction("ExitRoom", throwIfNotFound: true);
        m_Player_A = m_Player.FindAction("A", throwIfNotFound: true);
        m_Player_Z = m_Player.FindAction("Z", throwIfNotFound: true);
        m_Player_E = m_Player.FindAction("E", throwIfNotFound: true);
        m_Player_R = m_Player.FindAction("R", throwIfNotFound: true);
        m_Player_Q = m_Player.FindAction("Q", throwIfNotFound: true);
        m_Player_S = m_Player.FindAction("S", throwIfNotFound: true);
        m_Player_D = m_Player.FindAction("D", throwIfNotFound: true);
        m_Player_F = m_Player.FindAction("F", throwIfNotFound: true);
        m_Player_W = m_Player.FindAction("W", throwIfNotFound: true);
        m_Player_X = m_Player.FindAction("X", throwIfNotFound: true);
        m_Player_C = m_Player.FindAction("C", throwIfNotFound: true);
        m_Player_V = m_Player.FindAction("V", throwIfNotFound: true);
        m_Player_ButtonNorth = m_Player.FindAction("ButtonNorth", throwIfNotFound: true);
        m_Player_ButtonSouth = m_Player.FindAction("ButtonSouth", throwIfNotFound: true);
        m_Player_ButtonWest = m_Player.FindAction("ButtonWest", throwIfNotFound: true);
        m_Player_ButtonEast = m_Player.FindAction("ButtonEast", throwIfNotFound: true);
        m_Player_LeftShoulder = m_Player.FindAction("LeftShoulder", throwIfNotFound: true);
        m_Player_RightShoulder = m_Player.FindAction("RightShoulder", throwIfNotFound: true);
        m_Player_LeftStickButton = m_Player.FindAction("LeftStickButton", throwIfNotFound: true);
        m_Player_RightStickButton = m_Player.FindAction("RightStickButton", throwIfNotFound: true);
        // Player.Movement
        m_PlayerMovement = asset.FindActionMap("Player.Movement", throwIfNotFound: true);
        m_PlayerMovement_Jump = m_PlayerMovement.FindAction("Jump", throwIfNotFound: true);
        m_PlayerMovement_Roll = m_PlayerMovement.FindAction("Roll", throwIfNotFound: true);
        // Player.HeartStalker
        m_PlayerHeartStalker = asset.FindActionMap("Player.HeartStalker", throwIfNotFound: true);
        m_PlayerHeartStalker_LaunchActivity = m_PlayerHeartStalker.FindAction("LaunchActivity", throwIfNotFound: true);
        // UI.StatsBoard
        m_UIStatsBoard = asset.FindActionMap("UI.StatsBoard", throwIfNotFound: true);
        m_UIStatsBoard_OpenBoard = m_UIStatsBoard.FindAction("OpenBoard", throwIfNotFound: true);
        m_UIStatsBoard_CloseBoard = m_UIStatsBoard.FindAction("CloseBoard", throwIfNotFound: true);
        m_UIStatsBoard_UpArrow = m_UIStatsBoard.FindAction("UpArrow", throwIfNotFound: true);
        m_UIStatsBoard_DownArrow = m_UIStatsBoard.FindAction("DownArrow", throwIfNotFound: true);
        m_UIStatsBoard_RightArrow = m_UIStatsBoard.FindAction("RightArrow", throwIfNotFound: true);
        // UI.SimuBoard
        m_UISimuBoard = asset.FindActionMap("UI.SimuBoard", throwIfNotFound: true);
        m_UISimuBoard_OpenBoard = m_UISimuBoard.FindAction("OpenBoard", throwIfNotFound: true);
        m_UISimuBoard_CloseBoard = m_UISimuBoard.FindAction("CloseBoard", throwIfNotFound: true);
        m_UISimuBoard_LaunchGame = m_UISimuBoard.FindAction("LaunchGame", throwIfNotFound: true);
        m_UISimuBoard_UpArrow = m_UISimuBoard.FindAction("UpArrow", throwIfNotFound: true);
        m_UISimuBoard_DownArrow = m_UISimuBoard.FindAction("DownArrow", throwIfNotFound: true);
        m_UISimuBoard_RightArrow = m_UISimuBoard.FindAction("RightArrow", throwIfNotFound: true);
        m_UISimuBoard_LeftArrow = m_UISimuBoard.FindAction("LeftArrow", throwIfNotFound: true);
        m_UISimuBoard_NoobMode = m_UISimuBoard.FindAction("NoobMode", throwIfNotFound: true);
        // UI.MainMenu
        m_UIMainMenu = asset.FindActionMap("UI.MainMenu", throwIfNotFound: true);
        m_UIMainMenu_NewGame = m_UIMainMenu.FindAction("NewGame", throwIfNotFound: true);
        m_UIMainMenu_QuitOptions = m_UIMainMenu.FindAction("QuitOptions", throwIfNotFound: true);
        m_UIMainMenu_OpenOptions = m_UIMainMenu.FindAction("OpenOptions", throwIfNotFound: true);
        m_UIMainMenu_Quit = m_UIMainMenu.FindAction("Quit", throwIfNotFound: true);
        m_UIMainMenu_PassFaders = m_UIMainMenu.FindAction("PassFaders", throwIfNotFound: true);
        m_UIMainMenu_RightArrow = m_UIMainMenu.FindAction("RightArrow", throwIfNotFound: true);
        m_UIMainMenu_LeftArrow = m_UIMainMenu.FindAction("LeftArrow", throwIfNotFound: true);
        m_UIMainMenu_OpenControlls = m_UIMainMenu.FindAction("OpenControlls", throwIfNotFound: true);
        m_UIMainMenu_DeleteSave = m_UIMainMenu.FindAction("DeleteSave", throwIfNotFound: true);
        m_UIMainMenu_Continue = m_UIMainMenu.FindAction("Continue", throwIfNotFound: true);
        m_UIMainMenu_SelectDown = m_UIMainMenu.FindAction("SelectDown", throwIfNotFound: true);
        m_UIMainMenu_SelectUp = m_UIMainMenu.FindAction("SelectUp", throwIfNotFound: true);
        // UI.ControllsMenu
        m_UIControllsMenu = asset.FindActionMap("UI.ControllsMenu", throwIfNotFound: true);
        m_UIControllsMenu_QuitControllsMenu = m_UIControllsMenu.FindAction("QuitControllsMenu", throwIfNotFound: true);
        m_UIControllsMenu_ChangeUI = m_UIControllsMenu.FindAction("ChangeUI", throwIfNotFound: true);
        m_UIControllsMenu_SkipDialogue = m_UIControllsMenu.FindAction("Skip Dialogue", throwIfNotFound: true);
        // UI.Intro
        m_UIIntro = asset.FindActionMap("UI.Intro", throwIfNotFound: true);
        m_UIIntro_KeyPressed = m_UIIntro.FindAction("KeyPressed", throwIfNotFound: true);
        // UI.PauseMenu
        m_UIPauseMenu = asset.FindActionMap("UI.PauseMenu", throwIfNotFound: true);
        m_UIPauseMenu_OpenMenu = m_UIPauseMenu.FindAction("OpenMenu", throwIfNotFound: true);
        m_UIPauseMenu_CloseMenu = m_UIPauseMenu.FindAction("CloseMenu", throwIfNotFound: true);
        m_UIPauseMenu_LeftArrow = m_UIPauseMenu.FindAction("LeftArrow", throwIfNotFound: true);
        m_UIPauseMenu_RightArrow = m_UIPauseMenu.FindAction("RightArrow", throwIfNotFound: true);
        m_UIPauseMenu_Quit = m_UIPauseMenu.FindAction("Quit", throwIfNotFound: true);
        m_UIPauseMenu_ControllsMenu = m_UIPauseMenu.FindAction("ControllsMenu", throwIfNotFound: true);
        m_UIPauseMenu_ReturnHome = m_UIPauseMenu.FindAction("ReturnHome", throwIfNotFound: true);
        m_UIPauseMenu_UpArrow = m_UIPauseMenu.FindAction("UpArrow", throwIfNotFound: true);
        m_UIPauseMenu_DownArrow = m_UIPauseMenu.FindAction("DownArrow", throwIfNotFound: true);
        // UI.EndGame
        m_UIEndGame = asset.FindActionMap("UI.EndGame", throwIfNotFound: true);
        m_UIEndGame_Confirm = m_UIEndGame.FindAction("Confirm", throwIfNotFound: true);
        // UI.PassiveObjects
        m_UIPassiveObjects = asset.FindActionMap("UI.PassiveObjects", throwIfNotFound: true);
        m_UIPassiveObjects_Replace1 = m_UIPassiveObjects.FindAction("Replace1", throwIfNotFound: true);
        m_UIPassiveObjects_Replace2 = m_UIPassiveObjects.FindAction("Replace2", throwIfNotFound: true);
        m_UIPassiveObjects_Replace3 = m_UIPassiveObjects.FindAction("Replace3", throwIfNotFound: true);
        m_UIPassiveObjects_Replace4 = m_UIPassiveObjects.FindAction("Replace4", throwIfNotFound: true);
        m_UIPassiveObjects_Replace5 = m_UIPassiveObjects.FindAction("Replace5", throwIfNotFound: true);
        // UI.Credits
        m_UICredits = asset.FindActionMap("UI.Credits", throwIfNotFound: true);
        m_UICredits_Skip = m_UICredits.FindAction("Skip", throwIfNotFound: true);
        // Dialogues
        m_Dialogues = asset.FindActionMap("Dialogues", throwIfNotFound: true);
        m_Dialogues_NavDown = m_Dialogues.FindAction("NavDown", throwIfNotFound: true);
        m_Dialogues_NavUp = m_Dialogues.FindAction("NavUp", throwIfNotFound: true);
        m_Dialogues_AcceptProposition = m_Dialogues.FindAction("AcceptProposition", throwIfNotFound: true);
        m_Dialogues_CancelDialogue = m_Dialogues.FindAction("CancelDialogue", throwIfNotFound: true);
        m_Dialogues_OpenDialogues = m_Dialogues.FindAction("OpenDialogues", throwIfNotFound: true);
        // PressKey
        m_PressKey = asset.FindActionMap("PressKey", throwIfNotFound: true);
        m_PressKey_SleepRoom = m_PressKey.FindAction("SleepRoom", throwIfNotFound: true);
        m_PressKey_TakeWeapon = m_PressKey.FindAction("TakeWeapon", throwIfNotFound: true);
        m_PressKey_LaunchDialogue = m_PressKey.FindAction("LaunchDialogue", throwIfNotFound: true);
        m_PressKey_StartActivity = m_PressKey.FindAction("StartActivity", throwIfNotFound: true);
        m_PressKey_GamblingMachine = m_PressKey.FindAction("GamblingMachine", throwIfNotFound: true);
        m_PressKey_Teleport = m_PressKey.FindAction("Teleport", throwIfNotFound: true);
        m_PressKey_Throne = m_PressKey.FindAction("Throne", throwIfNotFound: true);
        m_PressKey_UpgradeWeapon = m_PressKey.FindAction("UpgradeWeapon", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_UsePotion;
    private readonly InputAction m_Player_UseTrinket;
    private readonly InputAction m_Player_UseWeapon;
    private readonly InputAction m_Player_ReloadSector;
    private readonly InputAction m_Player_ExitRoom;
    private readonly InputAction m_Player_A;
    private readonly InputAction m_Player_Z;
    private readonly InputAction m_Player_E;
    private readonly InputAction m_Player_R;
    private readonly InputAction m_Player_Q;
    private readonly InputAction m_Player_S;
    private readonly InputAction m_Player_D;
    private readonly InputAction m_Player_F;
    private readonly InputAction m_Player_W;
    private readonly InputAction m_Player_X;
    private readonly InputAction m_Player_C;
    private readonly InputAction m_Player_V;
    private readonly InputAction m_Player_ButtonNorth;
    private readonly InputAction m_Player_ButtonSouth;
    private readonly InputAction m_Player_ButtonWest;
    private readonly InputAction m_Player_ButtonEast;
    private readonly InputAction m_Player_LeftShoulder;
    private readonly InputAction m_Player_RightShoulder;
    private readonly InputAction m_Player_LeftStickButton;
    private readonly InputAction m_Player_RightStickButton;
    public struct PlayerActions
    {
        private @PlayerInputSystem m_Wrapper;
        public PlayerActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @UsePotion => m_Wrapper.m_Player_UsePotion;
        public InputAction @UseTrinket => m_Wrapper.m_Player_UseTrinket;
        public InputAction @UseWeapon => m_Wrapper.m_Player_UseWeapon;
        public InputAction @ReloadSector => m_Wrapper.m_Player_ReloadSector;
        public InputAction @ExitRoom => m_Wrapper.m_Player_ExitRoom;
        public InputAction @A => m_Wrapper.m_Player_A;
        public InputAction @Z => m_Wrapper.m_Player_Z;
        public InputAction @E => m_Wrapper.m_Player_E;
        public InputAction @R => m_Wrapper.m_Player_R;
        public InputAction @Q => m_Wrapper.m_Player_Q;
        public InputAction @S => m_Wrapper.m_Player_S;
        public InputAction @D => m_Wrapper.m_Player_D;
        public InputAction @F => m_Wrapper.m_Player_F;
        public InputAction @W => m_Wrapper.m_Player_W;
        public InputAction @X => m_Wrapper.m_Player_X;
        public InputAction @C => m_Wrapper.m_Player_C;
        public InputAction @V => m_Wrapper.m_Player_V;
        public InputAction @ButtonNorth => m_Wrapper.m_Player_ButtonNorth;
        public InputAction @ButtonSouth => m_Wrapper.m_Player_ButtonSouth;
        public InputAction @ButtonWest => m_Wrapper.m_Player_ButtonWest;
        public InputAction @ButtonEast => m_Wrapper.m_Player_ButtonEast;
        public InputAction @LeftShoulder => m_Wrapper.m_Player_LeftShoulder;
        public InputAction @RightShoulder => m_Wrapper.m_Player_RightShoulder;
        public InputAction @LeftStickButton => m_Wrapper.m_Player_LeftStickButton;
        public InputAction @RightStickButton => m_Wrapper.m_Player_RightStickButton;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @UsePotion.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUsePotion;
                @UsePotion.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUsePotion;
                @UsePotion.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUsePotion;
                @UseTrinket.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseTrinket;
                @UseTrinket.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseTrinket;
                @UseTrinket.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseTrinket;
                @UseWeapon.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseWeapon;
                @UseWeapon.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseWeapon;
                @UseWeapon.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUseWeapon;
                @ReloadSector.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReloadSector;
                @ReloadSector.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReloadSector;
                @ReloadSector.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReloadSector;
                @ExitRoom.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExitRoom;
                @ExitRoom.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExitRoom;
                @ExitRoom.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnExitRoom;
                @A.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnA;
                @Z.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnZ;
                @Z.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnZ;
                @Z.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnZ;
                @E.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnE;
                @E.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnE;
                @E.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnE;
                @R.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnR;
                @R.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnR;
                @R.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnR;
                @Q.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnQ;
                @Q.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnQ;
                @Q.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnQ;
                @S.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnS;
                @S.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnS;
                @S.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnS;
                @D.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnD;
                @D.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnD;
                @D.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnD;
                @F.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnF;
                @F.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnF;
                @F.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnF;
                @W.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnW;
                @W.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnW;
                @W.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnW;
                @X.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnX;
                @C.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnC;
                @C.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnC;
                @C.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnC;
                @V.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnV;
                @V.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnV;
                @V.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnV;
                @ButtonNorth.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonNorth;
                @ButtonNorth.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonNorth;
                @ButtonNorth.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonNorth;
                @ButtonSouth.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonSouth;
                @ButtonSouth.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonSouth;
                @ButtonSouth.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonSouth;
                @ButtonWest.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonWest;
                @ButtonWest.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonWest;
                @ButtonWest.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonWest;
                @ButtonEast.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonEast;
                @ButtonEast.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonEast;
                @ButtonEast.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonEast;
                @LeftShoulder.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftShoulder;
                @LeftShoulder.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftShoulder;
                @LeftShoulder.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftShoulder;
                @RightShoulder.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightShoulder;
                @RightShoulder.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightShoulder;
                @RightShoulder.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightShoulder;
                @LeftStickButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftStickButton;
                @LeftStickButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftStickButton;
                @LeftStickButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftStickButton;
                @RightStickButton.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightStickButton;
                @RightStickButton.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightStickButton;
                @RightStickButton.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightStickButton;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @UsePotion.started += instance.OnUsePotion;
                @UsePotion.performed += instance.OnUsePotion;
                @UsePotion.canceled += instance.OnUsePotion;
                @UseTrinket.started += instance.OnUseTrinket;
                @UseTrinket.performed += instance.OnUseTrinket;
                @UseTrinket.canceled += instance.OnUseTrinket;
                @UseWeapon.started += instance.OnUseWeapon;
                @UseWeapon.performed += instance.OnUseWeapon;
                @UseWeapon.canceled += instance.OnUseWeapon;
                @ReloadSector.started += instance.OnReloadSector;
                @ReloadSector.performed += instance.OnReloadSector;
                @ReloadSector.canceled += instance.OnReloadSector;
                @ExitRoom.started += instance.OnExitRoom;
                @ExitRoom.performed += instance.OnExitRoom;
                @ExitRoom.canceled += instance.OnExitRoom;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @Z.started += instance.OnZ;
                @Z.performed += instance.OnZ;
                @Z.canceled += instance.OnZ;
                @E.started += instance.OnE;
                @E.performed += instance.OnE;
                @E.canceled += instance.OnE;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @Q.started += instance.OnQ;
                @Q.performed += instance.OnQ;
                @Q.canceled += instance.OnQ;
                @S.started += instance.OnS;
                @S.performed += instance.OnS;
                @S.canceled += instance.OnS;
                @D.started += instance.OnD;
                @D.performed += instance.OnD;
                @D.canceled += instance.OnD;
                @F.started += instance.OnF;
                @F.performed += instance.OnF;
                @F.canceled += instance.OnF;
                @W.started += instance.OnW;
                @W.performed += instance.OnW;
                @W.canceled += instance.OnW;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @C.started += instance.OnC;
                @C.performed += instance.OnC;
                @C.canceled += instance.OnC;
                @V.started += instance.OnV;
                @V.performed += instance.OnV;
                @V.canceled += instance.OnV;
                @ButtonNorth.started += instance.OnButtonNorth;
                @ButtonNorth.performed += instance.OnButtonNorth;
                @ButtonNorth.canceled += instance.OnButtonNorth;
                @ButtonSouth.started += instance.OnButtonSouth;
                @ButtonSouth.performed += instance.OnButtonSouth;
                @ButtonSouth.canceled += instance.OnButtonSouth;
                @ButtonWest.started += instance.OnButtonWest;
                @ButtonWest.performed += instance.OnButtonWest;
                @ButtonWest.canceled += instance.OnButtonWest;
                @ButtonEast.started += instance.OnButtonEast;
                @ButtonEast.performed += instance.OnButtonEast;
                @ButtonEast.canceled += instance.OnButtonEast;
                @LeftShoulder.started += instance.OnLeftShoulder;
                @LeftShoulder.performed += instance.OnLeftShoulder;
                @LeftShoulder.canceled += instance.OnLeftShoulder;
                @RightShoulder.started += instance.OnRightShoulder;
                @RightShoulder.performed += instance.OnRightShoulder;
                @RightShoulder.canceled += instance.OnRightShoulder;
                @LeftStickButton.started += instance.OnLeftStickButton;
                @LeftStickButton.performed += instance.OnLeftStickButton;
                @LeftStickButton.canceled += instance.OnLeftStickButton;
                @RightStickButton.started += instance.OnRightStickButton;
                @RightStickButton.performed += instance.OnRightStickButton;
                @RightStickButton.canceled += instance.OnRightStickButton;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Player.Movement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Jump;
    private readonly InputAction m_PlayerMovement_Roll;
    public struct PlayerMovementActions
    {
        private @PlayerInputSystem m_Wrapper;
        public PlayerMovementActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_PlayerMovement_Jump;
        public InputAction @Roll => m_Wrapper.m_PlayerMovement_Roll;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Roll.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRoll;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player.HeartStalker
    private readonly InputActionMap m_PlayerHeartStalker;
    private IPlayerHeartStalkerActions m_PlayerHeartStalkerActionsCallbackInterface;
    private readonly InputAction m_PlayerHeartStalker_LaunchActivity;
    public struct PlayerHeartStalkerActions
    {
        private @PlayerInputSystem m_Wrapper;
        public PlayerHeartStalkerActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @LaunchActivity => m_Wrapper.m_PlayerHeartStalker_LaunchActivity;
        public InputActionMap Get() { return m_Wrapper.m_PlayerHeartStalker; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerHeartStalkerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerHeartStalkerActions instance)
        {
            if (m_Wrapper.m_PlayerHeartStalkerActionsCallbackInterface != null)
            {
                @LaunchActivity.started -= m_Wrapper.m_PlayerHeartStalkerActionsCallbackInterface.OnLaunchActivity;
                @LaunchActivity.performed -= m_Wrapper.m_PlayerHeartStalkerActionsCallbackInterface.OnLaunchActivity;
                @LaunchActivity.canceled -= m_Wrapper.m_PlayerHeartStalkerActionsCallbackInterface.OnLaunchActivity;
            }
            m_Wrapper.m_PlayerHeartStalkerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LaunchActivity.started += instance.OnLaunchActivity;
                @LaunchActivity.performed += instance.OnLaunchActivity;
                @LaunchActivity.canceled += instance.OnLaunchActivity;
            }
        }
    }
    public PlayerHeartStalkerActions @PlayerHeartStalker => new PlayerHeartStalkerActions(this);

    // UI.StatsBoard
    private readonly InputActionMap m_UIStatsBoard;
    private IUIStatsBoardActions m_UIStatsBoardActionsCallbackInterface;
    private readonly InputAction m_UIStatsBoard_OpenBoard;
    private readonly InputAction m_UIStatsBoard_CloseBoard;
    private readonly InputAction m_UIStatsBoard_UpArrow;
    private readonly InputAction m_UIStatsBoard_DownArrow;
    private readonly InputAction m_UIStatsBoard_RightArrow;
    public struct UIStatsBoardActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIStatsBoardActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenBoard => m_Wrapper.m_UIStatsBoard_OpenBoard;
        public InputAction @CloseBoard => m_Wrapper.m_UIStatsBoard_CloseBoard;
        public InputAction @UpArrow => m_Wrapper.m_UIStatsBoard_UpArrow;
        public InputAction @DownArrow => m_Wrapper.m_UIStatsBoard_DownArrow;
        public InputAction @RightArrow => m_Wrapper.m_UIStatsBoard_RightArrow;
        public InputActionMap Get() { return m_Wrapper.m_UIStatsBoard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIStatsBoardActions set) { return set.Get(); }
        public void SetCallbacks(IUIStatsBoardActions instance)
        {
            if (m_Wrapper.m_UIStatsBoardActionsCallbackInterface != null)
            {
                @OpenBoard.started -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnOpenBoard;
                @OpenBoard.performed -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnOpenBoard;
                @OpenBoard.canceled -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnOpenBoard;
                @CloseBoard.started -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnCloseBoard;
                @CloseBoard.performed -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnCloseBoard;
                @CloseBoard.canceled -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnCloseBoard;
                @UpArrow.started -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnUpArrow;
                @UpArrow.performed -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnUpArrow;
                @UpArrow.canceled -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnUpArrow;
                @DownArrow.started -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnDownArrow;
                @DownArrow.performed -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnDownArrow;
                @DownArrow.canceled -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnDownArrow;
                @RightArrow.started -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnRightArrow;
                @RightArrow.performed -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnRightArrow;
                @RightArrow.canceled -= m_Wrapper.m_UIStatsBoardActionsCallbackInterface.OnRightArrow;
            }
            m_Wrapper.m_UIStatsBoardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OpenBoard.started += instance.OnOpenBoard;
                @OpenBoard.performed += instance.OnOpenBoard;
                @OpenBoard.canceled += instance.OnOpenBoard;
                @CloseBoard.started += instance.OnCloseBoard;
                @CloseBoard.performed += instance.OnCloseBoard;
                @CloseBoard.canceled += instance.OnCloseBoard;
                @UpArrow.started += instance.OnUpArrow;
                @UpArrow.performed += instance.OnUpArrow;
                @UpArrow.canceled += instance.OnUpArrow;
                @DownArrow.started += instance.OnDownArrow;
                @DownArrow.performed += instance.OnDownArrow;
                @DownArrow.canceled += instance.OnDownArrow;
                @RightArrow.started += instance.OnRightArrow;
                @RightArrow.performed += instance.OnRightArrow;
                @RightArrow.canceled += instance.OnRightArrow;
            }
        }
    }
    public UIStatsBoardActions @UIStatsBoard => new UIStatsBoardActions(this);

    // UI.SimuBoard
    private readonly InputActionMap m_UISimuBoard;
    private IUISimuBoardActions m_UISimuBoardActionsCallbackInterface;
    private readonly InputAction m_UISimuBoard_OpenBoard;
    private readonly InputAction m_UISimuBoard_CloseBoard;
    private readonly InputAction m_UISimuBoard_LaunchGame;
    private readonly InputAction m_UISimuBoard_UpArrow;
    private readonly InputAction m_UISimuBoard_DownArrow;
    private readonly InputAction m_UISimuBoard_RightArrow;
    private readonly InputAction m_UISimuBoard_LeftArrow;
    private readonly InputAction m_UISimuBoard_NoobMode;
    public struct UISimuBoardActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UISimuBoardActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenBoard => m_Wrapper.m_UISimuBoard_OpenBoard;
        public InputAction @CloseBoard => m_Wrapper.m_UISimuBoard_CloseBoard;
        public InputAction @LaunchGame => m_Wrapper.m_UISimuBoard_LaunchGame;
        public InputAction @UpArrow => m_Wrapper.m_UISimuBoard_UpArrow;
        public InputAction @DownArrow => m_Wrapper.m_UISimuBoard_DownArrow;
        public InputAction @RightArrow => m_Wrapper.m_UISimuBoard_RightArrow;
        public InputAction @LeftArrow => m_Wrapper.m_UISimuBoard_LeftArrow;
        public InputAction @NoobMode => m_Wrapper.m_UISimuBoard_NoobMode;
        public InputActionMap Get() { return m_Wrapper.m_UISimuBoard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UISimuBoardActions set) { return set.Get(); }
        public void SetCallbacks(IUISimuBoardActions instance)
        {
            if (m_Wrapper.m_UISimuBoardActionsCallbackInterface != null)
            {
                @OpenBoard.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnOpenBoard;
                @OpenBoard.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnOpenBoard;
                @OpenBoard.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnOpenBoard;
                @CloseBoard.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnCloseBoard;
                @CloseBoard.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnCloseBoard;
                @CloseBoard.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnCloseBoard;
                @LaunchGame.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnLaunchGame;
                @LaunchGame.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnLaunchGame;
                @LaunchGame.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnLaunchGame;
                @UpArrow.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnUpArrow;
                @UpArrow.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnUpArrow;
                @UpArrow.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnUpArrow;
                @DownArrow.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnDownArrow;
                @DownArrow.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnDownArrow;
                @DownArrow.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnDownArrow;
                @RightArrow.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnRightArrow;
                @RightArrow.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnRightArrow;
                @RightArrow.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnRightArrow;
                @LeftArrow.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnLeftArrow;
                @NoobMode.started -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnNoobMode;
                @NoobMode.performed -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnNoobMode;
                @NoobMode.canceled -= m_Wrapper.m_UISimuBoardActionsCallbackInterface.OnNoobMode;
            }
            m_Wrapper.m_UISimuBoardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OpenBoard.started += instance.OnOpenBoard;
                @OpenBoard.performed += instance.OnOpenBoard;
                @OpenBoard.canceled += instance.OnOpenBoard;
                @CloseBoard.started += instance.OnCloseBoard;
                @CloseBoard.performed += instance.OnCloseBoard;
                @CloseBoard.canceled += instance.OnCloseBoard;
                @LaunchGame.started += instance.OnLaunchGame;
                @LaunchGame.performed += instance.OnLaunchGame;
                @LaunchGame.canceled += instance.OnLaunchGame;
                @UpArrow.started += instance.OnUpArrow;
                @UpArrow.performed += instance.OnUpArrow;
                @UpArrow.canceled += instance.OnUpArrow;
                @DownArrow.started += instance.OnDownArrow;
                @DownArrow.performed += instance.OnDownArrow;
                @DownArrow.canceled += instance.OnDownArrow;
                @RightArrow.started += instance.OnRightArrow;
                @RightArrow.performed += instance.OnRightArrow;
                @RightArrow.canceled += instance.OnRightArrow;
                @LeftArrow.started += instance.OnLeftArrow;
                @LeftArrow.performed += instance.OnLeftArrow;
                @LeftArrow.canceled += instance.OnLeftArrow;
                @NoobMode.started += instance.OnNoobMode;
                @NoobMode.performed += instance.OnNoobMode;
                @NoobMode.canceled += instance.OnNoobMode;
            }
        }
    }
    public UISimuBoardActions @UISimuBoard => new UISimuBoardActions(this);

    // UI.MainMenu
    private readonly InputActionMap m_UIMainMenu;
    private IUIMainMenuActions m_UIMainMenuActionsCallbackInterface;
    private readonly InputAction m_UIMainMenu_NewGame;
    private readonly InputAction m_UIMainMenu_QuitOptions;
    private readonly InputAction m_UIMainMenu_OpenOptions;
    private readonly InputAction m_UIMainMenu_Quit;
    private readonly InputAction m_UIMainMenu_PassFaders;
    private readonly InputAction m_UIMainMenu_RightArrow;
    private readonly InputAction m_UIMainMenu_LeftArrow;
    private readonly InputAction m_UIMainMenu_OpenControlls;
    private readonly InputAction m_UIMainMenu_DeleteSave;
    private readonly InputAction m_UIMainMenu_Continue;
    private readonly InputAction m_UIMainMenu_SelectDown;
    private readonly InputAction m_UIMainMenu_SelectUp;
    public struct UIMainMenuActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIMainMenuActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @NewGame => m_Wrapper.m_UIMainMenu_NewGame;
        public InputAction @QuitOptions => m_Wrapper.m_UIMainMenu_QuitOptions;
        public InputAction @OpenOptions => m_Wrapper.m_UIMainMenu_OpenOptions;
        public InputAction @Quit => m_Wrapper.m_UIMainMenu_Quit;
        public InputAction @PassFaders => m_Wrapper.m_UIMainMenu_PassFaders;
        public InputAction @RightArrow => m_Wrapper.m_UIMainMenu_RightArrow;
        public InputAction @LeftArrow => m_Wrapper.m_UIMainMenu_LeftArrow;
        public InputAction @OpenControlls => m_Wrapper.m_UIMainMenu_OpenControlls;
        public InputAction @DeleteSave => m_Wrapper.m_UIMainMenu_DeleteSave;
        public InputAction @Continue => m_Wrapper.m_UIMainMenu_Continue;
        public InputAction @SelectDown => m_Wrapper.m_UIMainMenu_SelectDown;
        public InputAction @SelectUp => m_Wrapper.m_UIMainMenu_SelectUp;
        public InputActionMap Get() { return m_Wrapper.m_UIMainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIMainMenuActions set) { return set.Get(); }
        public void SetCallbacks(IUIMainMenuActions instance)
        {
            if (m_Wrapper.m_UIMainMenuActionsCallbackInterface != null)
            {
                @NewGame.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnNewGame;
                @NewGame.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnNewGame;
                @NewGame.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnNewGame;
                @QuitOptions.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnQuitOptions;
                @QuitOptions.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnQuitOptions;
                @QuitOptions.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnQuitOptions;
                @OpenOptions.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnOpenOptions;
                @OpenOptions.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnOpenOptions;
                @OpenOptions.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnOpenOptions;
                @Quit.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnQuit;
                @PassFaders.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnPassFaders;
                @PassFaders.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnPassFaders;
                @PassFaders.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnPassFaders;
                @RightArrow.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnRightArrow;
                @RightArrow.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnRightArrow;
                @RightArrow.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnRightArrow;
                @LeftArrow.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnLeftArrow;
                @OpenControlls.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnOpenControlls;
                @OpenControlls.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnOpenControlls;
                @OpenControlls.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnOpenControlls;
                @DeleteSave.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnDeleteSave;
                @DeleteSave.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnDeleteSave;
                @DeleteSave.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnDeleteSave;
                @Continue.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnContinue;
                @Continue.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnContinue;
                @Continue.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnContinue;
                @SelectDown.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnSelectDown;
                @SelectDown.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnSelectDown;
                @SelectDown.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnSelectDown;
                @SelectUp.started -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnSelectUp;
                @SelectUp.performed -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnSelectUp;
                @SelectUp.canceled -= m_Wrapper.m_UIMainMenuActionsCallbackInterface.OnSelectUp;
            }
            m_Wrapper.m_UIMainMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NewGame.started += instance.OnNewGame;
                @NewGame.performed += instance.OnNewGame;
                @NewGame.canceled += instance.OnNewGame;
                @QuitOptions.started += instance.OnQuitOptions;
                @QuitOptions.performed += instance.OnQuitOptions;
                @QuitOptions.canceled += instance.OnQuitOptions;
                @OpenOptions.started += instance.OnOpenOptions;
                @OpenOptions.performed += instance.OnOpenOptions;
                @OpenOptions.canceled += instance.OnOpenOptions;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @PassFaders.started += instance.OnPassFaders;
                @PassFaders.performed += instance.OnPassFaders;
                @PassFaders.canceled += instance.OnPassFaders;
                @RightArrow.started += instance.OnRightArrow;
                @RightArrow.performed += instance.OnRightArrow;
                @RightArrow.canceled += instance.OnRightArrow;
                @LeftArrow.started += instance.OnLeftArrow;
                @LeftArrow.performed += instance.OnLeftArrow;
                @LeftArrow.canceled += instance.OnLeftArrow;
                @OpenControlls.started += instance.OnOpenControlls;
                @OpenControlls.performed += instance.OnOpenControlls;
                @OpenControlls.canceled += instance.OnOpenControlls;
                @DeleteSave.started += instance.OnDeleteSave;
                @DeleteSave.performed += instance.OnDeleteSave;
                @DeleteSave.canceled += instance.OnDeleteSave;
                @Continue.started += instance.OnContinue;
                @Continue.performed += instance.OnContinue;
                @Continue.canceled += instance.OnContinue;
                @SelectDown.started += instance.OnSelectDown;
                @SelectDown.performed += instance.OnSelectDown;
                @SelectDown.canceled += instance.OnSelectDown;
                @SelectUp.started += instance.OnSelectUp;
                @SelectUp.performed += instance.OnSelectUp;
                @SelectUp.canceled += instance.OnSelectUp;
            }
        }
    }
    public UIMainMenuActions @UIMainMenu => new UIMainMenuActions(this);

    // UI.ControllsMenu
    private readonly InputActionMap m_UIControllsMenu;
    private IUIControllsMenuActions m_UIControllsMenuActionsCallbackInterface;
    private readonly InputAction m_UIControllsMenu_QuitControllsMenu;
    private readonly InputAction m_UIControllsMenu_ChangeUI;
    private readonly InputAction m_UIControllsMenu_SkipDialogue;
    public struct UIControllsMenuActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIControllsMenuActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @QuitControllsMenu => m_Wrapper.m_UIControllsMenu_QuitControllsMenu;
        public InputAction @ChangeUI => m_Wrapper.m_UIControllsMenu_ChangeUI;
        public InputAction @SkipDialogue => m_Wrapper.m_UIControllsMenu_SkipDialogue;
        public InputActionMap Get() { return m_Wrapper.m_UIControllsMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIControllsMenuActions set) { return set.Get(); }
        public void SetCallbacks(IUIControllsMenuActions instance)
        {
            if (m_Wrapper.m_UIControllsMenuActionsCallbackInterface != null)
            {
                @QuitControllsMenu.started -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnQuitControllsMenu;
                @QuitControllsMenu.performed -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnQuitControllsMenu;
                @QuitControllsMenu.canceled -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnQuitControllsMenu;
                @ChangeUI.started -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnChangeUI;
                @ChangeUI.performed -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnChangeUI;
                @ChangeUI.canceled -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnChangeUI;
                @SkipDialogue.started -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnSkipDialogue;
                @SkipDialogue.performed -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnSkipDialogue;
                @SkipDialogue.canceled -= m_Wrapper.m_UIControllsMenuActionsCallbackInterface.OnSkipDialogue;
            }
            m_Wrapper.m_UIControllsMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @QuitControllsMenu.started += instance.OnQuitControllsMenu;
                @QuitControllsMenu.performed += instance.OnQuitControllsMenu;
                @QuitControllsMenu.canceled += instance.OnQuitControllsMenu;
                @ChangeUI.started += instance.OnChangeUI;
                @ChangeUI.performed += instance.OnChangeUI;
                @ChangeUI.canceled += instance.OnChangeUI;
                @SkipDialogue.started += instance.OnSkipDialogue;
                @SkipDialogue.performed += instance.OnSkipDialogue;
                @SkipDialogue.canceled += instance.OnSkipDialogue;
            }
        }
    }
    public UIControllsMenuActions @UIControllsMenu => new UIControllsMenuActions(this);

    // UI.Intro
    private readonly InputActionMap m_UIIntro;
    private IUIIntroActions m_UIIntroActionsCallbackInterface;
    private readonly InputAction m_UIIntro_KeyPressed;
    public struct UIIntroActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIIntroActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @KeyPressed => m_Wrapper.m_UIIntro_KeyPressed;
        public InputActionMap Get() { return m_Wrapper.m_UIIntro; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIIntroActions set) { return set.Get(); }
        public void SetCallbacks(IUIIntroActions instance)
        {
            if (m_Wrapper.m_UIIntroActionsCallbackInterface != null)
            {
                @KeyPressed.started -= m_Wrapper.m_UIIntroActionsCallbackInterface.OnKeyPressed;
                @KeyPressed.performed -= m_Wrapper.m_UIIntroActionsCallbackInterface.OnKeyPressed;
                @KeyPressed.canceled -= m_Wrapper.m_UIIntroActionsCallbackInterface.OnKeyPressed;
            }
            m_Wrapper.m_UIIntroActionsCallbackInterface = instance;
            if (instance != null)
            {
                @KeyPressed.started += instance.OnKeyPressed;
                @KeyPressed.performed += instance.OnKeyPressed;
                @KeyPressed.canceled += instance.OnKeyPressed;
            }
        }
    }
    public UIIntroActions @UIIntro => new UIIntroActions(this);

    // UI.PauseMenu
    private readonly InputActionMap m_UIPauseMenu;
    private IUIPauseMenuActions m_UIPauseMenuActionsCallbackInterface;
    private readonly InputAction m_UIPauseMenu_OpenMenu;
    private readonly InputAction m_UIPauseMenu_CloseMenu;
    private readonly InputAction m_UIPauseMenu_LeftArrow;
    private readonly InputAction m_UIPauseMenu_RightArrow;
    private readonly InputAction m_UIPauseMenu_Quit;
    private readonly InputAction m_UIPauseMenu_ControllsMenu;
    private readonly InputAction m_UIPauseMenu_ReturnHome;
    private readonly InputAction m_UIPauseMenu_UpArrow;
    private readonly InputAction m_UIPauseMenu_DownArrow;
    public struct UIPauseMenuActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIPauseMenuActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenMenu => m_Wrapper.m_UIPauseMenu_OpenMenu;
        public InputAction @CloseMenu => m_Wrapper.m_UIPauseMenu_CloseMenu;
        public InputAction @LeftArrow => m_Wrapper.m_UIPauseMenu_LeftArrow;
        public InputAction @RightArrow => m_Wrapper.m_UIPauseMenu_RightArrow;
        public InputAction @Quit => m_Wrapper.m_UIPauseMenu_Quit;
        public InputAction @ControllsMenu => m_Wrapper.m_UIPauseMenu_ControllsMenu;
        public InputAction @ReturnHome => m_Wrapper.m_UIPauseMenu_ReturnHome;
        public InputAction @UpArrow => m_Wrapper.m_UIPauseMenu_UpArrow;
        public InputAction @DownArrow => m_Wrapper.m_UIPauseMenu_DownArrow;
        public InputActionMap Get() { return m_Wrapper.m_UIPauseMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIPauseMenuActions set) { return set.Get(); }
        public void SetCallbacks(IUIPauseMenuActions instance)
        {
            if (m_Wrapper.m_UIPauseMenuActionsCallbackInterface != null)
            {
                @OpenMenu.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnOpenMenu;
                @OpenMenu.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnOpenMenu;
                @CloseMenu.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnCloseMenu;
                @CloseMenu.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnCloseMenu;
                @CloseMenu.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnCloseMenu;
                @LeftArrow.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnLeftArrow;
                @RightArrow.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnRightArrow;
                @RightArrow.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnRightArrow;
                @RightArrow.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnRightArrow;
                @Quit.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnQuit;
                @Quit.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnQuit;
                @Quit.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnQuit;
                @ControllsMenu.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnControllsMenu;
                @ControllsMenu.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnControllsMenu;
                @ControllsMenu.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnControllsMenu;
                @ReturnHome.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnReturnHome;
                @ReturnHome.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnReturnHome;
                @ReturnHome.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnReturnHome;
                @UpArrow.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnUpArrow;
                @UpArrow.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnUpArrow;
                @UpArrow.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnUpArrow;
                @DownArrow.started -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnDownArrow;
                @DownArrow.performed -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnDownArrow;
                @DownArrow.canceled -= m_Wrapper.m_UIPauseMenuActionsCallbackInterface.OnDownArrow;
            }
            m_Wrapper.m_UIPauseMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OpenMenu.started += instance.OnOpenMenu;
                @OpenMenu.performed += instance.OnOpenMenu;
                @OpenMenu.canceled += instance.OnOpenMenu;
                @CloseMenu.started += instance.OnCloseMenu;
                @CloseMenu.performed += instance.OnCloseMenu;
                @CloseMenu.canceled += instance.OnCloseMenu;
                @LeftArrow.started += instance.OnLeftArrow;
                @LeftArrow.performed += instance.OnLeftArrow;
                @LeftArrow.canceled += instance.OnLeftArrow;
                @RightArrow.started += instance.OnRightArrow;
                @RightArrow.performed += instance.OnRightArrow;
                @RightArrow.canceled += instance.OnRightArrow;
                @Quit.started += instance.OnQuit;
                @Quit.performed += instance.OnQuit;
                @Quit.canceled += instance.OnQuit;
                @ControllsMenu.started += instance.OnControllsMenu;
                @ControllsMenu.performed += instance.OnControllsMenu;
                @ControllsMenu.canceled += instance.OnControllsMenu;
                @ReturnHome.started += instance.OnReturnHome;
                @ReturnHome.performed += instance.OnReturnHome;
                @ReturnHome.canceled += instance.OnReturnHome;
                @UpArrow.started += instance.OnUpArrow;
                @UpArrow.performed += instance.OnUpArrow;
                @UpArrow.canceled += instance.OnUpArrow;
                @DownArrow.started += instance.OnDownArrow;
                @DownArrow.performed += instance.OnDownArrow;
                @DownArrow.canceled += instance.OnDownArrow;
            }
        }
    }
    public UIPauseMenuActions @UIPauseMenu => new UIPauseMenuActions(this);

    // UI.EndGame
    private readonly InputActionMap m_UIEndGame;
    private IUIEndGameActions m_UIEndGameActionsCallbackInterface;
    private readonly InputAction m_UIEndGame_Confirm;
    public struct UIEndGameActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIEndGameActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Confirm => m_Wrapper.m_UIEndGame_Confirm;
        public InputActionMap Get() { return m_Wrapper.m_UIEndGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIEndGameActions set) { return set.Get(); }
        public void SetCallbacks(IUIEndGameActions instance)
        {
            if (m_Wrapper.m_UIEndGameActionsCallbackInterface != null)
            {
                @Confirm.started -= m_Wrapper.m_UIEndGameActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_UIEndGameActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_UIEndGameActionsCallbackInterface.OnConfirm;
            }
            m_Wrapper.m_UIEndGameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
            }
        }
    }
    public UIEndGameActions @UIEndGame => new UIEndGameActions(this);

    // UI.PassiveObjects
    private readonly InputActionMap m_UIPassiveObjects;
    private IUIPassiveObjectsActions m_UIPassiveObjectsActionsCallbackInterface;
    private readonly InputAction m_UIPassiveObjects_Replace1;
    private readonly InputAction m_UIPassiveObjects_Replace2;
    private readonly InputAction m_UIPassiveObjects_Replace3;
    private readonly InputAction m_UIPassiveObjects_Replace4;
    private readonly InputAction m_UIPassiveObjects_Replace5;
    public struct UIPassiveObjectsActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UIPassiveObjectsActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Replace1 => m_Wrapper.m_UIPassiveObjects_Replace1;
        public InputAction @Replace2 => m_Wrapper.m_UIPassiveObjects_Replace2;
        public InputAction @Replace3 => m_Wrapper.m_UIPassiveObjects_Replace3;
        public InputAction @Replace4 => m_Wrapper.m_UIPassiveObjects_Replace4;
        public InputAction @Replace5 => m_Wrapper.m_UIPassiveObjects_Replace5;
        public InputActionMap Get() { return m_Wrapper.m_UIPassiveObjects; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIPassiveObjectsActions set) { return set.Get(); }
        public void SetCallbacks(IUIPassiveObjectsActions instance)
        {
            if (m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface != null)
            {
                @Replace1.started -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace1;
                @Replace1.performed -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace1;
                @Replace1.canceled -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace1;
                @Replace2.started -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace2;
                @Replace2.performed -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace2;
                @Replace2.canceled -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace2;
                @Replace3.started -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace3;
                @Replace3.performed -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace3;
                @Replace3.canceled -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace3;
                @Replace4.started -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace4;
                @Replace4.performed -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace4;
                @Replace4.canceled -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace4;
                @Replace5.started -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace5;
                @Replace5.performed -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace5;
                @Replace5.canceled -= m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface.OnReplace5;
            }
            m_Wrapper.m_UIPassiveObjectsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Replace1.started += instance.OnReplace1;
                @Replace1.performed += instance.OnReplace1;
                @Replace1.canceled += instance.OnReplace1;
                @Replace2.started += instance.OnReplace2;
                @Replace2.performed += instance.OnReplace2;
                @Replace2.canceled += instance.OnReplace2;
                @Replace3.started += instance.OnReplace3;
                @Replace3.performed += instance.OnReplace3;
                @Replace3.canceled += instance.OnReplace3;
                @Replace4.started += instance.OnReplace4;
                @Replace4.performed += instance.OnReplace4;
                @Replace4.canceled += instance.OnReplace4;
                @Replace5.started += instance.OnReplace5;
                @Replace5.performed += instance.OnReplace5;
                @Replace5.canceled += instance.OnReplace5;
            }
        }
    }
    public UIPassiveObjectsActions @UIPassiveObjects => new UIPassiveObjectsActions(this);

    // UI.Credits
    private readonly InputActionMap m_UICredits;
    private IUICreditsActions m_UICreditsActionsCallbackInterface;
    private readonly InputAction m_UICredits_Skip;
    public struct UICreditsActions
    {
        private @PlayerInputSystem m_Wrapper;
        public UICreditsActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Skip => m_Wrapper.m_UICredits_Skip;
        public InputActionMap Get() { return m_Wrapper.m_UICredits; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UICreditsActions set) { return set.Get(); }
        public void SetCallbacks(IUICreditsActions instance)
        {
            if (m_Wrapper.m_UICreditsActionsCallbackInterface != null)
            {
                @Skip.started -= m_Wrapper.m_UICreditsActionsCallbackInterface.OnSkip;
                @Skip.performed -= m_Wrapper.m_UICreditsActionsCallbackInterface.OnSkip;
                @Skip.canceled -= m_Wrapper.m_UICreditsActionsCallbackInterface.OnSkip;
            }
            m_Wrapper.m_UICreditsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Skip.started += instance.OnSkip;
                @Skip.performed += instance.OnSkip;
                @Skip.canceled += instance.OnSkip;
            }
        }
    }
    public UICreditsActions @UICredits => new UICreditsActions(this);

    // Dialogues
    private readonly InputActionMap m_Dialogues;
    private IDialoguesActions m_DialoguesActionsCallbackInterface;
    private readonly InputAction m_Dialogues_NavDown;
    private readonly InputAction m_Dialogues_NavUp;
    private readonly InputAction m_Dialogues_AcceptProposition;
    private readonly InputAction m_Dialogues_CancelDialogue;
    private readonly InputAction m_Dialogues_OpenDialogues;
    public struct DialoguesActions
    {
        private @PlayerInputSystem m_Wrapper;
        public DialoguesActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @NavDown => m_Wrapper.m_Dialogues_NavDown;
        public InputAction @NavUp => m_Wrapper.m_Dialogues_NavUp;
        public InputAction @AcceptProposition => m_Wrapper.m_Dialogues_AcceptProposition;
        public InputAction @CancelDialogue => m_Wrapper.m_Dialogues_CancelDialogue;
        public InputAction @OpenDialogues => m_Wrapper.m_Dialogues_OpenDialogues;
        public InputActionMap Get() { return m_Wrapper.m_Dialogues; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialoguesActions set) { return set.Get(); }
        public void SetCallbacks(IDialoguesActions instance)
        {
            if (m_Wrapper.m_DialoguesActionsCallbackInterface != null)
            {
                @NavDown.started -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnNavDown;
                @NavDown.performed -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnNavDown;
                @NavDown.canceled -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnNavDown;
                @NavUp.started -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnNavUp;
                @NavUp.performed -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnNavUp;
                @NavUp.canceled -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnNavUp;
                @AcceptProposition.started -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnAcceptProposition;
                @AcceptProposition.performed -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnAcceptProposition;
                @AcceptProposition.canceled -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnAcceptProposition;
                @CancelDialogue.started -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnCancelDialogue;
                @CancelDialogue.performed -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnCancelDialogue;
                @CancelDialogue.canceled -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnCancelDialogue;
                @OpenDialogues.started -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnOpenDialogues;
                @OpenDialogues.performed -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnOpenDialogues;
                @OpenDialogues.canceled -= m_Wrapper.m_DialoguesActionsCallbackInterface.OnOpenDialogues;
            }
            m_Wrapper.m_DialoguesActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NavDown.started += instance.OnNavDown;
                @NavDown.performed += instance.OnNavDown;
                @NavDown.canceled += instance.OnNavDown;
                @NavUp.started += instance.OnNavUp;
                @NavUp.performed += instance.OnNavUp;
                @NavUp.canceled += instance.OnNavUp;
                @AcceptProposition.started += instance.OnAcceptProposition;
                @AcceptProposition.performed += instance.OnAcceptProposition;
                @AcceptProposition.canceled += instance.OnAcceptProposition;
                @CancelDialogue.started += instance.OnCancelDialogue;
                @CancelDialogue.performed += instance.OnCancelDialogue;
                @CancelDialogue.canceled += instance.OnCancelDialogue;
                @OpenDialogues.started += instance.OnOpenDialogues;
                @OpenDialogues.performed += instance.OnOpenDialogues;
                @OpenDialogues.canceled += instance.OnOpenDialogues;
            }
        }
    }
    public DialoguesActions @Dialogues => new DialoguesActions(this);

    // PressKey
    private readonly InputActionMap m_PressKey;
    private IPressKeyActions m_PressKeyActionsCallbackInterface;
    private readonly InputAction m_PressKey_SleepRoom;
    private readonly InputAction m_PressKey_TakeWeapon;
    private readonly InputAction m_PressKey_LaunchDialogue;
    private readonly InputAction m_PressKey_StartActivity;
    private readonly InputAction m_PressKey_GamblingMachine;
    private readonly InputAction m_PressKey_Teleport;
    private readonly InputAction m_PressKey_Throne;
    private readonly InputAction m_PressKey_UpgradeWeapon;
    public struct PressKeyActions
    {
        private @PlayerInputSystem m_Wrapper;
        public PressKeyActions(@PlayerInputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @SleepRoom => m_Wrapper.m_PressKey_SleepRoom;
        public InputAction @TakeWeapon => m_Wrapper.m_PressKey_TakeWeapon;
        public InputAction @LaunchDialogue => m_Wrapper.m_PressKey_LaunchDialogue;
        public InputAction @StartActivity => m_Wrapper.m_PressKey_StartActivity;
        public InputAction @GamblingMachine => m_Wrapper.m_PressKey_GamblingMachine;
        public InputAction @Teleport => m_Wrapper.m_PressKey_Teleport;
        public InputAction @Throne => m_Wrapper.m_PressKey_Throne;
        public InputAction @UpgradeWeapon => m_Wrapper.m_PressKey_UpgradeWeapon;
        public InputActionMap Get() { return m_Wrapper.m_PressKey; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PressKeyActions set) { return set.Get(); }
        public void SetCallbacks(IPressKeyActions instance)
        {
            if (m_Wrapper.m_PressKeyActionsCallbackInterface != null)
            {
                @SleepRoom.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnSleepRoom;
                @SleepRoom.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnSleepRoom;
                @SleepRoom.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnSleepRoom;
                @TakeWeapon.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnTakeWeapon;
                @TakeWeapon.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnTakeWeapon;
                @TakeWeapon.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnTakeWeapon;
                @LaunchDialogue.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnLaunchDialogue;
                @LaunchDialogue.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnLaunchDialogue;
                @LaunchDialogue.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnLaunchDialogue;
                @StartActivity.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnStartActivity;
                @StartActivity.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnStartActivity;
                @StartActivity.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnStartActivity;
                @GamblingMachine.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnGamblingMachine;
                @GamblingMachine.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnGamblingMachine;
                @GamblingMachine.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnGamblingMachine;
                @Teleport.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnTeleport;
                @Teleport.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnTeleport;
                @Teleport.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnTeleport;
                @Throne.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnThrone;
                @Throne.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnThrone;
                @Throne.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnThrone;
                @UpgradeWeapon.started -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnUpgradeWeapon;
                @UpgradeWeapon.performed -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnUpgradeWeapon;
                @UpgradeWeapon.canceled -= m_Wrapper.m_PressKeyActionsCallbackInterface.OnUpgradeWeapon;
            }
            m_Wrapper.m_PressKeyActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SleepRoom.started += instance.OnSleepRoom;
                @SleepRoom.performed += instance.OnSleepRoom;
                @SleepRoom.canceled += instance.OnSleepRoom;
                @TakeWeapon.started += instance.OnTakeWeapon;
                @TakeWeapon.performed += instance.OnTakeWeapon;
                @TakeWeapon.canceled += instance.OnTakeWeapon;
                @LaunchDialogue.started += instance.OnLaunchDialogue;
                @LaunchDialogue.performed += instance.OnLaunchDialogue;
                @LaunchDialogue.canceled += instance.OnLaunchDialogue;
                @StartActivity.started += instance.OnStartActivity;
                @StartActivity.performed += instance.OnStartActivity;
                @StartActivity.canceled += instance.OnStartActivity;
                @GamblingMachine.started += instance.OnGamblingMachine;
                @GamblingMachine.performed += instance.OnGamblingMachine;
                @GamblingMachine.canceled += instance.OnGamblingMachine;
                @Teleport.started += instance.OnTeleport;
                @Teleport.performed += instance.OnTeleport;
                @Teleport.canceled += instance.OnTeleport;
                @Throne.started += instance.OnThrone;
                @Throne.performed += instance.OnThrone;
                @Throne.canceled += instance.OnThrone;
                @UpgradeWeapon.started += instance.OnUpgradeWeapon;
                @UpgradeWeapon.performed += instance.OnUpgradeWeapon;
                @UpgradeWeapon.canceled += instance.OnUpgradeWeapon;
            }
        }
    }
    public PressKeyActions @PressKey => new PressKeyActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnUsePotion(InputAction.CallbackContext context);
        void OnUseTrinket(InputAction.CallbackContext context);
        void OnUseWeapon(InputAction.CallbackContext context);
        void OnReloadSector(InputAction.CallbackContext context);
        void OnExitRoom(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnZ(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnQ(InputAction.CallbackContext context);
        void OnS(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnW(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnC(InputAction.CallbackContext context);
        void OnV(InputAction.CallbackContext context);
        void OnButtonNorth(InputAction.CallbackContext context);
        void OnButtonSouth(InputAction.CallbackContext context);
        void OnButtonWest(InputAction.CallbackContext context);
        void OnButtonEast(InputAction.CallbackContext context);
        void OnLeftShoulder(InputAction.CallbackContext context);
        void OnRightShoulder(InputAction.CallbackContext context);
        void OnLeftStickButton(InputAction.CallbackContext context);
        void OnRightStickButton(InputAction.CallbackContext context);
    }
    public interface IPlayerMovementActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
    }
    public interface IPlayerHeartStalkerActions
    {
        void OnLaunchActivity(InputAction.CallbackContext context);
    }
    public interface IUIStatsBoardActions
    {
        void OnOpenBoard(InputAction.CallbackContext context);
        void OnCloseBoard(InputAction.CallbackContext context);
        void OnUpArrow(InputAction.CallbackContext context);
        void OnDownArrow(InputAction.CallbackContext context);
        void OnRightArrow(InputAction.CallbackContext context);
    }
    public interface IUISimuBoardActions
    {
        void OnOpenBoard(InputAction.CallbackContext context);
        void OnCloseBoard(InputAction.CallbackContext context);
        void OnLaunchGame(InputAction.CallbackContext context);
        void OnUpArrow(InputAction.CallbackContext context);
        void OnDownArrow(InputAction.CallbackContext context);
        void OnRightArrow(InputAction.CallbackContext context);
        void OnLeftArrow(InputAction.CallbackContext context);
        void OnNoobMode(InputAction.CallbackContext context);
    }
    public interface IUIMainMenuActions
    {
        void OnNewGame(InputAction.CallbackContext context);
        void OnQuitOptions(InputAction.CallbackContext context);
        void OnOpenOptions(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
        void OnPassFaders(InputAction.CallbackContext context);
        void OnRightArrow(InputAction.CallbackContext context);
        void OnLeftArrow(InputAction.CallbackContext context);
        void OnOpenControlls(InputAction.CallbackContext context);
        void OnDeleteSave(InputAction.CallbackContext context);
        void OnContinue(InputAction.CallbackContext context);
        void OnSelectDown(InputAction.CallbackContext context);
        void OnSelectUp(InputAction.CallbackContext context);
    }
    public interface IUIControllsMenuActions
    {
        void OnQuitControllsMenu(InputAction.CallbackContext context);
        void OnChangeUI(InputAction.CallbackContext context);
        void OnSkipDialogue(InputAction.CallbackContext context);
    }
    public interface IUIIntroActions
    {
        void OnKeyPressed(InputAction.CallbackContext context);
    }
    public interface IUIPauseMenuActions
    {
        void OnOpenMenu(InputAction.CallbackContext context);
        void OnCloseMenu(InputAction.CallbackContext context);
        void OnLeftArrow(InputAction.CallbackContext context);
        void OnRightArrow(InputAction.CallbackContext context);
        void OnQuit(InputAction.CallbackContext context);
        void OnControllsMenu(InputAction.CallbackContext context);
        void OnReturnHome(InputAction.CallbackContext context);
        void OnUpArrow(InputAction.CallbackContext context);
        void OnDownArrow(InputAction.CallbackContext context);
    }
    public interface IUIEndGameActions
    {
        void OnConfirm(InputAction.CallbackContext context);
    }
    public interface IUIPassiveObjectsActions
    {
        void OnReplace1(InputAction.CallbackContext context);
        void OnReplace2(InputAction.CallbackContext context);
        void OnReplace3(InputAction.CallbackContext context);
        void OnReplace4(InputAction.CallbackContext context);
        void OnReplace5(InputAction.CallbackContext context);
    }
    public interface IUICreditsActions
    {
        void OnSkip(InputAction.CallbackContext context);
    }
    public interface IDialoguesActions
    {
        void OnNavDown(InputAction.CallbackContext context);
        void OnNavUp(InputAction.CallbackContext context);
        void OnAcceptProposition(InputAction.CallbackContext context);
        void OnCancelDialogue(InputAction.CallbackContext context);
        void OnOpenDialogues(InputAction.CallbackContext context);
    }
    public interface IPressKeyActions
    {
        void OnSleepRoom(InputAction.CallbackContext context);
        void OnTakeWeapon(InputAction.CallbackContext context);
        void OnLaunchDialogue(InputAction.CallbackContext context);
        void OnStartActivity(InputAction.CallbackContext context);
        void OnGamblingMachine(InputAction.CallbackContext context);
        void OnTeleport(InputAction.CallbackContext context);
        void OnThrone(InputAction.CallbackContext context);
        void OnUpgradeWeapon(InputAction.CallbackContext context);
    }
}
